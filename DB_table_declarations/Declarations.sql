CREATE TABLE STUDENT(
    SSN INT NOT NULL,
    ID INT NOT NULL,
    FIRSTNAME VARCHAR(20) NOT NULL,
    MIDDLENAME VARCHAR(20),
    LASTNAME VARCHAR(20) NOT NULL,
    RESIDENCY VARCHAR(20) NOT NULL,
    STU_STATUS VARCHAR(20) NOT NULL,
    ENROLL VARCHAR(5) NOT NULL,
    PRIMARY KEY(ID)
);

CREATE TABLE PAST_DEGREE(
    STUDENT_ID INT NOT NULL,
    YEAR INT NOT NULL,
    TITLE VARCHAR(40) INT NOT NULL,
    UNIVERSITY VARCHAR(40),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    CONSTRAINT PAST_DEGREE_KEY PRIMARY KEY (STUDENT_ID,YEAR,TITLE, UNIVERSITY)
);

CREATE TABLE PROBATION(
    STUDENT_ID INT NOT NULL,
    START_QUARTER VARCHAR(20),
    START_YEAR INT NOT NULL,
    END_QUARTER VARCHAR(20),
    END_YEAR INT,
    REASON VARCHAR(140) NOT NULL,
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    CONSTRAINT PB_KEY PRIMARY KEY (STUDENT_ID,START_QUARTER,START_YEAR)
);

CREATE TABLE ATTENDANCE(
    STUDENT_ID INT NOT NULL,
    START_QUARTER VARCHAR(20),
    START_YEAR INT NOT NULL,
    END_QUARTER VARCHAR(20),
    END_YEAR INT,
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    CONSTRAINT ATTEND_KEY PRIMARY KEY (STUDENT_ID,START_QUARTER,START_YEAR)
);

CREATE TABLE UNDERGRAD(
    UNDERGRAD_ID INT NOT NULL,
    COLLEGE_NAME VARCHAR(50),
    MAJOR VARCHAR(10),
    MINOR VARCHAR(10),
    FIVEYEAR VARCHAR(5),
    PRIMARY KEY (UNDERGRAD_ID),
    FOREIGN KEY (UNDERGRAD_ID) REFERENCES STUDENT(ID)
);


CREATE TABLE GRAD(
    GRAD_ID INT NOT NULL,
    G_STATUS VARCHAR(20) NOT NULL,
    DEPT_NAME VARCHAR(40),
    CONCENTRATION VARCHAR(25),
    PRIMARY KEY (GRAD_ID),
    FOREIGN KEY (GRAD_ID) REFERENCES STUDENT(ID),
    FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT(DEPT_NAME)
);


CREATE TABLE FACULTY(
    F_NAME VARCHAR(20) NOT NULL,
    TITLE VARCHAR(50),
    PRIMARY KEY(F_NAME)
);


CREATE TABLE DEPARTMENT(
    DEPT_NAME VARCHAR(40) NOT NULL,
    MIN_GPA DECIMAL(4,3),
    MAJ_UNIT_UPDIV INT NOT NULL,
    MAJ_UNIT_LOWDIV INT NOT NULL,
    MIN_UNIT_UPDIV INT NOT NULL,
    MIN_UNIT_LOWDIV INT NOT NULL,
    PRIMARY KEY(DEPT_NAME)
);

CREATE TABLE WORKS_FOR(
    F_NAME VARCHAR(20) NOT NULL,
    DEPT_NAME VARCHAR(40) NOT NULL,
    FOREIGN KEY (F_NAME) REFERENCES FACULTY(F_NAME),
    FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT(DEPT_NAME),
    CONSTRAINT WORKS_FOR_KEY PRIMARY KEY(F_NAME, DEPT_NAME)
);

CREATE TABLE CATEGORIES(
    DEPT_NAME VARCHAR(40) NOT NULL,
    COURSE_NUM INT NOT NULL,
    NAME VARCHAR(30) NOT NULL,
    MIN_UNITS INT,
    MIN_GPA DECIMAL(4,3),
    FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT(DEPT_NAME),
    FOREIGN KEY (COURSE_NUM) REFERENCES COURSE(COURSE_NUM),
    CONSTRAINT CAT_KEY PRIMARY KEY(DEPT_NAME, COURSE_NUM, NAME)
);

CREATE TABLE CONCENTRATION(
    DEPT_NAME VARCHAR(40) NOT NULL,
    COURSE_NUM INT NOT NULL,
    NAME VARCHAR(30) NOT NULL,
    MIN_UNITS INT,
    MIN_GPA DECIMAL(4,3),
    FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT(DEPT_NAME),
    FOREIGN KEY (COURSE_NUM) REFERENCES COURSE(COURSE_NUM),
    CONSTRAINT CONC_KEY PRIMARY KEY(DEPT_NAME, COURSE_NUM, NAME)
);

CREATE TABLE COURSE(
    COURSE_NUM INT NOT NULL,
    GRADE_OPT VARCHAR(20) NOT NULL,
    LEVEL VARCHAR(10) NOT NULL,
    TITLE VARCHAR(50) NOT NULL,
    LAB_REQ VARCHAR(5) NOT NULL,
    UNITS VARCHAR(15) NOT NULL,
    PRIMARY KEY(COURSE_NUM)
);

CREATE TABLE PREREQUISITE(
    PREREQ_NUM INT NOT NULL,
    COURSE_NUM INT NOT NULL,
    INSTRUCTOR_CONSENT VARCHAR(5) NOT NULL,
    FOREIGN KEY (PREREQ_NUM) REFERENCES COURSE(COURSE_NUM),
    FOREIGN KEY (COURSE_NUM) REFERENCES COURSE(COURSE_NUM),
    CONSTRAINT PREREQ_KEY PRIMARY KEY (PREREQ_NUM, COURSE_NUM)
);

CREATE TABLE COURSE_UNITS(
    COURSE_NUM INT NOT NULL,
    UNITS INT NOT NULL,
    CONSTRAINT C_KEY PRIMARY KEY (COURSE_NUM, UNITS),
    FOREIGN KEY (COURSE_NUM) REFERENCES COURSE(COURSE_NUM)
);


CREATE TABLE TAKES(
    STUDENT_ID INT NOT NULL,
    SECTION_ID INT NOT NULL,
    GRADE VARCHAR(5),
    UNITS INT NOT NULL,
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    FOREIGN KEY (SECTION_ID) REFERENCES SECTION(SECTION_ID),
    CONSTRAINT TAKES_KEY PRIMARY KEY (STUDENT_ID, SECTION_ID)
);


CREATE TABLE TAKEN(
    STUDENT_ID INT NOT NULL,
    SECTION_ID INT NOT NULL,
    GRADE VARCHAR(5),
    UNITS INT NOT NULL,
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    FOREIGN KEY (SECTION_ID) REFERENCES SECTION(SECTION_ID),
    CONSTRAINT TAKEN_KEY PRIMARY KEY (STUDENT_ID, SECTION_ID)
);

CREATE TABLE WAITLISTED_FOR(
    STUDENT_ID INT NOT NULL,
    SECTION_ID INT NOT NULL,
    GRADE VARCHAR(5),
    UNITS INT NOT NULL,
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    FOREIGN KEY (SECTION_ID) REFERENCES SECTION(SECTION_ID),
    CONSTRAINT WAITLISTED_KEY PRIMARY KEY (STUDENT_ID, SECTION_ID)
);

CREATE TABLE CLASS(
    COURSE_NUM INT NOT NULL,
    QUARTER VARCHAR(20),
    YEAR INT NOT NULL,
    FOREIGN KEY (COURSE_NUM) REFERENCES COURSE (COURSE_NUM),
    CONSTRAINT CLASS_KEY PRIMARY KEY(COURSE_NUM, QUARTER, YEAR)
);


CREATE TABLE SECTION(
    SECTION_ID INT NOT NULL,
    CLASS_SIZE INT NOT NULL,
    COURSE_NUM INT NOT NULL,
    FACULTY_NAME VARCHAR(20) NOT NULL,
    QUARTER VARCHAR(20),
    YEAR INT NOT NULL,
    PRIMARY KEY (SECTION_ID),
	FOREIGN KEY (COURSE_NUM, QUARTER, YEAR) REFERENCES CLASS(COURSE_NUM, QUARTER, YEAR),
    FOREIGN KEY (FACULTY_NAME) REFERENCES FACULTY(F_NAME)
);


CREATE TABLE MEETING(
    SECTION_ID INT NOT NULL,
    BUILDING VARCHAR(15) NOT NULL,
    ROOM VARCHAR(10) NOT NULL,
    TIME VARCHAR(20) NOT NULL,
    DAY VARCHAR(15) NOT NULL,
    MANDATORY VARCHAR(5),
    TYPE VARCHAR(20),
    FOREIGN KEY (SECTION_ID) REFERENCES SECTION(SECTION_ID),
    CONSTRAINT MEETING_KEY PRIMARY KEY (SECTION_ID,BUILDING,ROOM,TIME,DAY)
);

CREATE TABLE ONE_TIME(
    SECTION_ID INT NOT NULL,
    TYPE VARCHAR(40),
    BUILDING INT NOT NULL,
    ROOM VARCHAR(20) NOT NULL,
    TIME VARCHAR(50) NOT NULL,
    DAY VARCHAR(20) NOT NULL,
    CONSTRAINT OT_KEY PRIMARY KEY (SECTION_ID, BUILDING, ROOM, TIME, DAY),
    FOREIGN KEY (COURSE_NUM) REFERENCES COURSE(COURSE_NUM)
);

CREATE TABLE MAJOR_IN(
    UNDERGRAD_ID INT NOT NULL,
    DEPT_NAME VARCHAR(40) NOT NULL,
    FOREIGN KEY (UNDERGRAD_ID) REFERENCES UNDERGRAD(UNDERGRAD_ID),
    FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT(DEPT_NAME),
    CONSTRAINT MIN_KEY PRIMARY KEY (UNDERGRAD_ID, DEPT_NAME)
);

CREATE TABLE MINOR_IN(
    UNDERGRAD_ID INT NOT NULL,
    DEPT_NAME VARCHAR(40) NOT NULL,
    FOREIGN KEY (UNDERGRAD_ID) REFERENCES UNDERGRAD(UNDERGRAD_ID),
    FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT(DEPT_NAME),
    CONSTRAINT MAJ_KEY PRIMARY KEY (UNDERGRAD_ID, DEPT_NAME)
);

CREATE TABLE BELONGS_TO(
    GRAD_ID INT NOT NULL,
    DEPT_NAME VARCHAR(40) NOT NULL,
    FOREIGN KEY (GRAD_ID) REFERENCES GRAD(GRAD_ID),
    FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT(DEPT_NAME),
    PRIMARY KEY (GRAD_ID)
);

CREATE TABLE THESIS_COMMITTEE(
    GRAD_ID INT NOT NULL,
    F_NAME VARCHAR(20) NOT NULL,
    FOREIGN KEY (GRAD_ID) REFERENCES GRAD(GRAD_ID),
    FOREIGN KEY (F_NAME) REFERENCES FACULTY(F_NAME),
    CONSTRAINT TC_KEY PRIMARY KEY (GRAD_ID, F_NAME)
);

CREATE TABLE ADVISOR(
    GRAD_ID INT NOT NULL,
    F_NAME VARCHAR(20) NOT NULL,
    FOREIGN KEY (GRAD_ID) REFERENCES GRAD(GRAD_ID),
    FOREIGN KEY (F_NAME) REFERENCES FACULTY(F_NAME),
    CONSTRAINT ADVISOR_KEY PRIMARY KEY (GRAD_ID, F_NAME)
);

CREATE TABLE OFFERED_BY(
    COURSE_NUM INT NOT NULL,
    DEPT_NAME VARCHAR(40) NOT NULL,
    FOREIGN KEY (COURSE_NUM) REFERENCES COURSE(COURSE_NUM),
    FOREIGN KEY (DEPT_NAME ) REFERENCES DEPARTMENT(DEPT_NAME ),
    CONSTRAINT OFFER_KEY PRIMARY KEY (COURSE_NUM , DEPT_NAME)
);

CREATE TABLE FINANCE(
    ACCOUNT_NUM INT NOT NULL,
    SALARY INT NOT NULL,
    PRIMARY KEY (ACCOUNT_NUM)
);

CREATE TABLE PART_TIME(
    ACCOUNT_NUM INT NOT NULL,
    STUDENT_ID INT NOT NULL,
    FOREIGN KEY (ACCOUNT_NUM) REFERENCES FINANCE(ACCOUNT_NUM),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    CONSTRAINT PART_TIME_KEY PRIMARY KEY (ACCOUNT_NUM, STUDENT_ID)
);

CREATE TABLE FULL_TIME(
    ACCOUNT_NUM INT NOT NULL,
    F_NAME VARCHAR(20) NOT NULL,
    FOREIGN KEY (ACCOUNT_NUM) REFERENCES FINANCE(ACCOUNT_NUM),
    FOREIGN KEY (F_NAME) REFERENCES FACULTY(F_NAME),
    CONSTRAINT FULL_TIME_KEY PRIMARY KEY (ACCOUNT_NUM, F_NAME)
);
